apply plugin: 'com.android.application'

def askForKeystorePassword() {
	def prompt =
			"\n==========================================================" +
			"\nKeystore : ${android.signingConfigs.release.storeFile}"     +
			"\nKey alias: ${android.signingConfigs.release.keyAlias}"      +
			"\n==========================================================" +
			"\nPassword: "

	def console = System.console()

	if (console) {
		return new String(console.readPassword(prompt))
	} else {
		return ""
	}
}

buildscript {
	repositories {
		mavenCentral()
		google()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:8.1.1'
	}
}

repositories {
	mavenCentral()
	google()
}

dependencies {
		implementation 'com.j256.ormlite:ormlite-android:6.1'
		implementation 'androidx.legacy:legacy-support-v4:1.0.0'
		implementation 'androidx.legacy:legacy-support-v13:1.0.0'
		implementation 'androidx.appcompat:appcompat:1.6.1'
		implementation 'joda-time:joda-time:2.12.5'
		implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.3'
}


android {
	namespace 'at.jclehner.rxdroid'
	compileSdk 33

	defaultConfig {
		minSdkVersion 19
		targetSdkVersion 33

        applicationId 'at.jclehner.rxdroid';

		versionCode 9361
		versionName '0.9.36.1'
	}

	lintOptions {
		warning 'MissingTranslation'
		warning 'MissingQuantity'
	}

	signingConfigs {
		release {
			def keystore = System.getenv("RXDROID_KEYSTORE")
			def console = System.console()
			if (keystore && console) {
				storeFile file(keystore)
				keyAlias System.getenv("RXDROID_KEY_ALIAS")
				storePassword askForKeystorePassword()
				keyPassword storePassword
			}
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			proguardFile 'proguard-project.txt'
			signingConfig signingConfigs.release
		}
		debug {
			//applicationIdSuffix '.debug'
		}
	}
}
